@use 'variables' as *;
@use 'sass:map';

// Theme generation with enhanced glassmorphism support
@each $class, $colors in $color-map {
  .#{$class} {
    --accent-color: #{map.get($colors, accent-color)};
    --secondary-color: #{map.get($colors, secondary-color)};
    --bg-color: #{map.get($colors, bg-color)};
    --text-color: #{map.get($colors, text-color)};
    --accent-gradient-color: #{map.get($colors, accent-gradient-color)};
    
    // Enhanced glassmorphism properties
    @if map.has-key($colors, glass-bg) {
      --glass-bg: #{map.get($colors, glass-bg)};
      --glass-border: #{map.get($colors, glass-border)};
      --glow-color: #{map.get($colors, glow-color)};
    }
  }
  
  body:has(.#{$class}) {
    background: #{map.get($colors, bg-color)};
    
    // Add animated background for glass themes
    @if map.has-key($colors, glass-bg) {
      background: #{map.get($colors, bg-color)};
      background-image: 
        radial-gradient(at 40% 20%, #{map.get($colors, accent-color)}22 0px, transparent 50%),
        radial-gradient(at 80% 0%, #{map.get($colors, accent-color)}15 0px, transparent 50%),
        radial-gradient(at 0% 50%, #{map.get($colors, accent-color)}10 0px, transparent 50%),
        radial-gradient(at 80% 50%, #{map.get($colors, accent-color)}12 0px, transparent 50%),
        radial-gradient(at 0% 100%, #{map.get($colors, accent-color)}08 0px, transparent 50%),
        radial-gradient(at 80% 100%, #{map.get($colors, accent-color)}18 0px, transparent 50%),
        radial-gradient(at 0% 0%, #{map.get($colors, accent-color)}05 0px, transparent 50%);
      min-height: 100vh;
      animation: backgroundShift 20s ease-in-out infinite;
    }
  }
}

// Glassmorphism utilities
.glass-morphism {
  background: var(--glass-bg, rgba(255, 255, 255, 0.05));
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  border: 1px solid var(--glass-border, rgba(255, 255, 255, 0.18));
  border-radius: $border-radius-lg;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.12),
    inset 0 1px 0 rgba(255, 255, 255, 0.1);
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 1px;
    background: linear-gradient(90deg, 
      transparent 0%, 
      var(--glass-border, rgba(255, 255, 255, 0.18)) 50%, 
      transparent 100%);
  }
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: 
      0 12px 48px rgba(0, 0, 0, 0.15),
      0 0 20px var(--glow-color, rgba(255, 255, 255, 0.1)),
      inset 0 1px 0 rgba(255, 255, 255, 0.15);
    transition: all $transition-normal;
  }
}

.glow-effect {
  position: relative;
  
  &::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: var(--accent-gradient-color, var(--accent-color));
    border-radius: inherit;
    z-index: -1;
    opacity: 0;
    filter: blur(8px);
    transition: opacity $transition-normal;
  }
  
  &:hover::after {
    opacity: 0.7;
  }
}

// Enhanced gradient utilities
.gradient-border {
  position: relative;
  border-radius: $border-radius-lg;
  
  &::before {
    content: '';
    position: absolute;
    inset: 0;
    padding: 2px;
    background: var(--accent-gradient-color, var(--accent-color));
    border-radius: inherit;
    mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    mask-composite: xor;
    -webkit-mask: linear-gradient(#fff 0 0) content-box, linear-gradient(#fff 0 0);
    -webkit-mask-composite: xor;
  }
}

// Global theme utilities (enhanced)
.has-gradient-accent {
  .button {
    background: var(--accent-gradient-color);
    color: var(--bg-color);
    border: none;
    position: relative;
    overflow: hidden;
    
    &::before {
      content: '';
      position: absolute;
      top: 0;
      left: -100%;
      width: 100%;
      height: 100%;
      background: linear-gradient(90deg, 
        transparent 0%, 
        rgba(255, 255, 255, 0.2) 50%, 
        transparent 100%);
      transition: left $transition-fast;
    }
    
    &:hover::before {
      left: 100%;
    }
  }
  
  .month-badge,
  .income-header {
    background: var(--accent-gradient-color);
    color: var(--bg-color);
  }
  
  .month-stats > div {
    border: none;
    
    &:before {
      content: '';
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      z-index: -1;
      margin: -5px;
      background: var(--accent-gradient-color);
      
      @media only screen and (max-width: $breakpoint-sm) {
        margin: -4px;
      }
    }
    
    @media only screen and (max-width: $breakpoint-sm) {
      border: 4px solid var(--accent-color);
      
      &:before {
        margin: -4px;
      }
    }
  }
}

// Animation keyframes
@keyframes backgroundShift {
  0%, 100% { 
    background-position: 0% 50%; 
  }
  50% { 
    background-position: 100% 50%; 
  }
}

@keyframes float {
  0%, 100% { 
    transform: translateY(0px); 
  }
  50% { 
    transform: translateY(-10px); 
  }
}

@keyframes pulse {
  0%, 100% { 
    opacity: 1; 
  }
  50% { 
    opacity: 0.7; 
  }
}

@keyframes shimmer {
  0% { 
    background-position: -200% center; 
  }
  100% { 
    background-position: 200% center; 
  }
} 